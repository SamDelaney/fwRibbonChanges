#!/bin/sh
#
# Slightly modified from the default pre-commit sample hook script.
# It checks that the filename doesn't have non-ascii characters,
# and performs the whitespace check on the file.

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Check for whitespace errors
git diff-index --check --cached $against -- || exit 1

# If you want to allow non-ascii filenames set this variable to true.
allownonascii=$(git config hooks.allownonascii)

# Cross platform projects tend to avoid non-ascii filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test "$(git diff --cached --name-only --diff-filter=AR -z $against |
	  LC_ALL=C tr -d '[ -~]\0')"
then
	echo "WARNING: Attempt to add a non-ascii file name:"
	echo "$(git diff --cached --name-only --diff-filter=AR -z $against |
		LC_ALL=C tr '\0' '\n' | LC_ALL=C grep --extended-regexp --invert-match '^[ -~]+$')"
	echo
	echo "This can cause problems if you want to work"
	echo "with people on other platforms. To be portable it"
	echo "is advisable to rename the file..."
	echo
	echo "If you know what you are doing you can ignore this"
	echo "check using:"
	echo
	echo "  git commit --no-verify"
	echo
	exit 1
fi
